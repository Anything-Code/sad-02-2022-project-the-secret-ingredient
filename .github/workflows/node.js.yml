name: nodeJS CI
on: push

jobs:
  frontend:
    runs-on: ubuntu-latest
    env:
        working-directory: ./frontend
    steps:
    
    
    - uses: actions/checkout@master
    - name: current working directory
      run: ls -R
      working-directory: ${{env.working-directory}}
    - name: run npm
      run: |
         pwd
         npm i --force
         npm run test
         npm run build

      working-directory: ${{env.working-directory}}
      
  
  backend:
      runs-on: ubuntu-latest
      env:
        working-directory: ./backend

      steps:
        - name: Checkout repo
          uses: actions/checkout@master
        - name: working dir
          run : ls -R   
          working-directory: ${{env.working-directory}}
          

        - name: Download Deno
          uses: denolib/setup-deno@master
          with:
            deno-version: v1.1.2


        - name: Start main.ts
          run: |
             pwd
             ls -R
             deno --version
             #deno lint --unstable
             #deno fmt --check
             deno test --allow-none
          working-directory: ./backend/src
          
        - name: Build and push Dockerfile for backend
          run: |
             docker build -t app .
             docker login -u {{ secrets.DOCKER_USERNAME }} -p {{ secrets.DOCKER_PASSWORD }}
             echo "login success"
             docker tag app senbonzakura/secretingredient
             docker push senbonzakura/secretingredient
          working-directory: ${{env.working-directory}}
          
          
          

  Backend_API_tests:
      runs-on: ubuntu-latest
      env:
        working-directory: ./Postman Tests

      steps:
        - name: Checkout repo
          uses: actions/checkout@master
          
          
        - name: working dir
          run : ls -R   
          working-directory: ${{env.working-directory}}
          
          
        - name: Install node
          uses: actions/setup-node@v1
          with:
           node-version: "12.x"
           working-directory: ./Postman Tests
           
           
        - name: Install newman
          run: npm install -g newman
          working-directory: ${{env.working-directory}}
          
        - name: Run collection
          run: |
           pwd
           newman --version
           newman run Board_tests.json -e prodEnv.json
           newman run API_testPack.json -e prodEnv.json
          working-directory: ${{env.working-directory}}
          


 
 
 
